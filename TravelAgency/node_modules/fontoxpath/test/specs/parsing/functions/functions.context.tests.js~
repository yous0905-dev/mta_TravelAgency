import slimdom from 'slimdom';

import {
	evaluateXPathToBoolean,
	evaluateXPathToString
} from 'fontoxpath';

import evaluateXPathToAsyncSingleton from 'test-helpers/evaluateXPathToAsyncSingleton';

let documentNode;
beforeEach(() => {
	documentNode = slimdom.createDocument();
});

describe('Context related functions', () => {
	describe('fn:current-dateTime', () => {
		it('returns the current dateTime',
			() => chai.assert.isOk(evaluateXPathToString('current-dateTime()', documentNode)));
		it('returns the same value during the execution of the query',
			() => chai.assert.isTrue(evaluateXPathToBoolean('current-dateTime() eq current-dateTime()')));
		it('returns the same value during the execution of an async query', async () => {
			chai.assert.isTrue(await evaluateXPathToBoolean('current-dateTime() eq fontoxpath:sleep(current-dateTime(), 1000)'));
		});
		it('returns different values for different queries',
			() => chai.assert.notEqual(evaluateXPathToString('current-dateTime()'), setTimeout(evaluateXPathToString('current-dateTime()'), 100)));
	});
	describe('fn:current-date', () => {
		it('returns the current date',
			() => chai.assert.isOk(evaluateXPathToString('current-date()', documentNode)));
	});
	describe('fn:current-time', () => {
		it('returns the current time',
			() => chai.assert.isOk(evaluateXPathToString('current-time()', documentNode)));
	});
	describe('fn:implicit-timezone', () => {
		it('returns the implicit timezone',
			() => chai.assert.isOk(evaluateXPathToString('implicit-timezone()', documentNode)));
	});
});
